/*
 * This file is generated by jOOQ.
 */
package fyi.sorenneedscoffee.derg_zero.moderation.db.tables;


import fyi.sorenneedscoffee.derg_zero.moderation.db.Indexes;
import fyi.sorenneedscoffee.derg_zero.moderation.db.Keys;
import fyi.sorenneedscoffee.derg_zero.moderation.db.S4D0Users;
import fyi.sorenneedscoffee.derg_zero.moderation.db.tables.records.ModerationCasesRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.4"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ModerationCases extends TableImpl<ModerationCasesRecord> {

    /**
     * The reference instance of <code>s4_d0_users.moderation_cases</code>
     */
    public static final ModerationCases MODERATION_CASES = new ModerationCases();
    private static final long serialVersionUID = 524784924;
    /**
     * The column <code>s4_d0_users.moderation_cases.id</code>.
     */
    public final TableField<ModerationCasesRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");
    /**
     * The column <code>s4_d0_users.moderation_cases.creation_time</code>.
     */
    public final TableField<ModerationCasesRecord, Timestamp> CREATION_TIME = createField(DSL.name("creation_time"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "");
    /**
     * The column <code>s4_d0_users.moderation_cases.user_id</code>.
     */
    public final TableField<ModerationCasesRecord, String> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.VARCHAR(18), this, "");
    /**
     * The column <code>s4_d0_users.moderation_cases.offense_id</code>.
     */
    public final TableField<ModerationCasesRecord, Integer> OFFENSE_ID = createField(DSL.name("offense_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");
    /**
     * The column <code>s4_d0_users.moderation_cases.additional_comments</code>.
     */
    public final TableField<ModerationCasesRecord, String> ADDITIONAL_COMMENTS = createField(DSL.name("additional_comments"), org.jooq.impl.SQLDataType.VARCHAR(2000), this, "");

    /**
     * Create a <code>s4_d0_users.moderation_cases</code> table reference
     */
    public ModerationCases() {
        this(DSL.name("moderation_cases"), null);
    }

    /**
     * Create an aliased <code>s4_d0_users.moderation_cases</code> table reference
     */
    public ModerationCases(String alias) {
        this(DSL.name(alias), MODERATION_CASES);
    }

    /**
     * Create an aliased <code>s4_d0_users.moderation_cases</code> table reference
     */
    public ModerationCases(Name alias) {
        this(alias, MODERATION_CASES);
    }

    private ModerationCases(Name alias, Table<ModerationCasesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ModerationCases(Name alias, Table<ModerationCasesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ModerationCases(Table<O> child, ForeignKey<O, ModerationCasesRecord> key) {
        super(child, key, MODERATION_CASES);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ModerationCasesRecord> getRecordType() {
        return ModerationCasesRecord.class;
    }

    @Override
    public Schema getSchema() {
        return S4D0Users.S4_D0_USERS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MODERATION_CASES_MODERATION_CASES_OFFENSE_TYPES_ID_FK, Indexes.MODERATION_CASES_PRIMARY);
    }

    @Override
    public Identity<ModerationCasesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MODERATION_CASES;
    }

    @Override
    public UniqueKey<ModerationCasesRecord> getPrimaryKey() {
        return Keys.KEY_MODERATION_CASES_PRIMARY;
    }

    @Override
    public List<UniqueKey<ModerationCasesRecord>> getKeys() {
        return Arrays.<UniqueKey<ModerationCasesRecord>>asList(Keys.KEY_MODERATION_CASES_PRIMARY);
    }

    @Override
    public ModerationCases as(String alias) {
        return new ModerationCases(DSL.name(alias), this);
    }

    @Override
    public ModerationCases as(Name alias) {
        return new ModerationCases(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ModerationCases rename(String name) {
        return new ModerationCases(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ModerationCases rename(Name name) {
        return new ModerationCases(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Timestamp, String, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
